/*
 * This file is generated by jOOQ.
 */
package kr.co.commerce.common.jooq.generated.tables.records


import java.time.LocalDateTime

import kr.co.commerce.common.jooq.generated.tables.JMemberLoginHistory
import kr.co.commerce.common.jooq.generated.tables.pojos.MemberLoginHistory

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * 고객 로그인 이력 테이블
 */
@Suppress("UNCHECKED_CAST")
open class MemberLoginHistoryRecord private constructor() : UpdatableRecordImpl<MemberLoginHistoryRecord>(JMemberLoginHistory.MEMBER_LOGIN_HISTORY) {

    open var seq: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var memberSeq: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var createdBy: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var createdTime: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised MemberLoginHistoryRecord
     */
    constructor(seq: Long? = null, memberSeq: Long, createdBy: String, createdTime: LocalDateTime? = null): this() {
        this.seq = seq
        this.memberSeq = memberSeq
        this.createdBy = createdBy
        this.createdTime = createdTime
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised MemberLoginHistoryRecord
     */
    constructor(value: MemberLoginHistory?): this() {
        if (value != null) {
            this.seq = value.seq
            this.memberSeq = value.memberSeq
            this.createdBy = value.createdBy
            this.createdTime = value.createdTime
            resetChangedOnNotNull()
        }
    }
}
